create database atelier;

CREATE TABLE Questions (
  question_id INTEGER NOT NULL AUTO_INCREMENT,
  product_id INTEGER,
  question_body TEXT,
  question_date VARCHAR(25),
  asker_name VARCHAR(255),
  asker_email VARCHAR(255),
  reported BOOL,
  question_helpfulness INTEGER,
  PRIMARY KEY (question_id)
);

SELECT * FROM Questions ORDER BY question_id LIMIT 5;

LOAD DATA LOCAL INFILE '/Users/louisla/senior/sdc/questions-answers-service/csvData/questions.csv'
INTO TABLE Questions
FIELDS TERMINATED BY ','
ENCLOSED BY '"'
LINES TERMINATED BY '\n'
IGNORE 1 ROWS;

LOAD DATA LOCAL INFILE '/home/ubuntu/data/questions.csv'
INTO TABLE Questions
FIELDS TERMINATED BY ','
ENCLOSED BY '"'
LINES TERMINATED BY '\n'
IGNORE 1 ROWS;

SELECT question_id, question_body, question_date, asker_name, question_helpfulness, reported from questions where product_id = 1 AND reported = 0;


SELECT
  question_id,
  question_body,
  question_date,
  asker_name,
  question_helpfulness,
  reported,
  (
    SELECT JSON_OBJECTAGG(
      Answers.answer_id, (JSON_OBJECT(
        'id', answer_id,
        'body', body,
        'date', date_written,
        'answerer_name', answerer_name,
        'helpfulness', helpfulness,
        'photos', (JSON_ARRAY('links', 'url1', 'url2', 'url3'))))
    )
    FROM Answers
    WHERE question_id = Questions.question_id
  ) AS answers
FROM Questions
WHERE product_id = 1 AND reported = 0;


SELECT
  question_id,
  question_body,
  question_date,
  asker_name,
  question_helpfulness,
  reported,
  (
    SELECT JSON_OBJECTAGG(
      answers.answer_id, (JSON_OBJECT(
        'id', answer_id,
        'body', body,
        'date', date_written,
        'answerer_name', answerer_name,
        'helpfulness', helpfulness,
        'photos', (JSON_ARRAY('url1', 'url2', 'url3'))))
    )
    FROM answers
    WHERE question_id = questions.question_id
  ) AS answers
FROM Questions
WHERE product_id = 1 AND reported = 0;


CREATE TABLE Answers (
  answer_id INTEGER NOT NULL AUTO_INCREMENT,
  question_id INTEGER,
  body TEXT,
  date_written VARCHAR(25),
  answerer_name VARCHAR(255),
  answerer_email VARCHAR(255),
  reported BOOL,
  helpfulness INTEGER,
  PRIMARY KEY (answer_id),
  FOREIGN KEY (question_id)
    REFERENCES Questions(question_id)
);


LOAD DATA LOCAL INFILE '/Users/louisla/senior/sdc/questions-answers-service/csvData/answers.csv'
INTO TABLE Answers
FIELDS TERMINATED BY ','
ENCLOSED BY '"'
LINES TERMINATED BY '\n'
IGNORE 1 ROWS;

LOAD DATA LOCAL INFILE '/home/ubuntu/data/answers.csv'
INTO TABLE Answers
FIELDS TERMINATED BY ','
ENCLOSED BY '"'
LINES TERMINATED BY '\n'
IGNORE 1 ROWS;


SELECT * FROM Answers ORDER BY answer_id LIMIT 5;

CREATE TABLE Photos (
  table_id INTEGER NOT NULL AUTO_INCREMENT,
  answer_id INTEGER,
  url VARCHAR(255),
  PRIMARY KEY (table_id),
  FOREIGN KEY (answer_id)
    REFERENCES Answers(answer_id)
);

LOAD DATA LOCAL INFILE '/Users/louisla/senior/sdc/questions-answers-service/csvData/answers_photos.csv'
INTO TABLE Photos
FIELDS TERMINATED BY ','
ENCLOSED BY '"'
LINES TERMINATED BY '\n'
IGNORE 1 ROWS;

LOAD DATA LOCAL INFILE '/home/ubuntu/data/answers_photos.csv'
INTO TABLE Photos
FIELDS TERMINATED BY ','
ENCLOSED BY '"'
LINES TERMINATED BY '\n'
IGNORE 1 ROWS;


SELECT * FROM Photos ORDER BY answer_id LIMIT 5;

ALTER TABLE Answers ADD COLUMN photos VARCHAR(255);

UPDATE Answers t1
INNER JOIN Photos t2 ON Answers.answer_id = Photos.answer_id
SET Answers.Photo = t2.Age

ALTER TABLE Photos DROP COLUMN table_id;

UPDATE Answers
JOIN
  (SELECT answer_id,GROUP_CONCAT(photos) as max FROM Answers where meta_key = "Name"
group by answers_id
  ) AS photos on answers.answer_id=photos.answer_id
SET answers.photos = photos.max



// Get last entries
SELECT * FROM Questions ORDER BY product_id DESC LIMIT 1;

INSERT
  INTO Questions
    (
      product_id,
      question_body,
      question_date,
      asker_name,
      asker_email,
      reported,
      question_helpfulness
    )
VALUES
  (
    1,
    'checking',
    1616066721011,
    'John',
    'gmail',
    0,
    0
  );


  // test time
    SELECT
    question_id,
    question_body,
    question_date,
    asker_name,
    question_helpfulness,
    reported,
    (
      SELECT JSON_OBJECTAGG(
        Answers.answer_id, (JSON_OBJECT(
          'id', answer_id,
          'body', body,
          'date', date_written,
          'answerer_name', answerer_name,
          'helpfulness', helpfulness,
          'photos', (JSON_ARRAY())
        ))
      )
      FROM Answers
      WHERE question_id = Questions.question_id
    ) AS answers
  FROM Questions
  WHERE product_id = 5 AND reported = 0;

    SELECT url FROM Photos WHERE answer_id = 5;

  SELECT * FROM INFORMATION_SCHEMA.PROFILING WHERE QUERY_ID=18;


  // add index
  CREATE INDEX indexid ON Questions (product_id, question_id, asker_name);